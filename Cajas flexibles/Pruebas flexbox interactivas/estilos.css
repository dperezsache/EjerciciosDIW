body {
    font-family: Arial;
    margin: auto;
    margin-bottom: 10px;
    background-color: ghostwhite;
}

nav {
    background-color: lightblue;
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}

h2 {
    color: darkblue;
    text-align: center;
}

hr {
    border: 0;
    height: 1px;
    background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(173,172,172,1) 15%, rgba(173,172,172,1) 50%, rgba(173,172,172,1) 85%, rgba(173,172,172,0) 100%);
}

nav ul {
    list-style: none;
    display: flex;
    margin: 0;
    padding: 0;
}

button {
    background-color: white;
    border: 1px solid gray;
    border-radius: 0;
    padding: 5px;
}

button:hover {
    background-color: lightgray;
}

button:active {
    background-color: rgb(172, 172, 172);
}

nav ul li {
    margin: auto;
    text-align: center;
}

nav ul li a {
    background-color: lightcyan;
    padding: 5px;
    border-radius: 5px;
    text-decoration: none;
}

div.divPrueba {
    display: flex;
    flex-direction: column;  /* Alinear los contenedores uno encima de otro, osea en columna */
    align-items: center;
}

div#divFlex1 {
    display: flex;              /* Indicar al contenedor padre que es de tipo flex */
    justify-content: center;    /* Los contenedores hijos aparecerán centrados */
    border: 2px solid black;
    padding: 5px;
    background-color: lightblue;
}

div#divFlex1 div {
    width: 200px;
    text-align: center;
    padding: 5px;
    border: 1px solid gray;
}

div#divFlex1 div:nth-child(odd) {
    background-color: white;
    flex-grow: 1;
    flex-shrink: 1;
}

div#divFlex1 div:nth-child(even) {
    background-color: lightgray;
    flex-grow: 3;   /* Al tener más grow que los impares, los pares ocuparán más espacio disponible si pueden */
    flex-shrink: 3; /* Al tener más shrink que los impares, a los pares se les quitaría más espacio si es necesario para que quepan las demás cajas */
}

div.divBotones {
    text-align: center;
    margin-top: 50px;
}

div#divFlex2 {
    display: flex;
    flex-direction: row;    /* La dirección en que los contenedores son mostrados, que será horizontalmente al se row */
}

div#divFlex2 div {
    text-align: center;
    width: 70px;
    height: 50px;
    background-color: lightskyblue;
    border: 1px solid blue;
    border-radius: 5px;
    margin: 5px;
}

div#divFlex3 {
    display: flex;
    border: 1px solid black;
    width: 300px;
    height: 200px;
    align-items: stretch;   /* Los contenedores se alinearán verticalmente ocupando todo el espacio disponible */
    justify-content: center;
}

div#divFlex3 div {
    text-align: center;
    width: 70px;
    background-color: rgb(180, 0, 0);
    color: white;
    border: 5px solid red;
}

div#divFlex4 {
    display: flex;
    row-gap: 10px;  /* Espacio vertical que tendrán los elementos de este contenedor */
    column-gap: 10px;   /* Espacio horizontal que tendrán los elementos de este contenedor */
    /* gap: 10px;   También se puede hacer la propiedad shorthand para cambiar el row y column a la vez */
    border: 1px solid black;
    width: 300px;
    height: 200px;
}

div#divFlex4 div {
    background-color: dodgerblue;
    border: 5px solid rgb(0, 75, 150);
    width: 75px;
    height: 50px;
}

@media (max-width: 650px) {
    nav ul {
        flex-direction: column;
        row-gap: 20px;
    }

    h1 {
        margin-bottom: 0;
    }

    nav ul li:nth-child(5) {
        margin-bottom: 20px;
    }
    
    div.divPrueba {
        align-items: inherit;
        margin: 0 25px;
    }

    div.divPrueba ul,
    div.divPrueba ol {
        padding-left: 0;
    }

    div.divPrueba ul li,
    div.divPrueba ol li {
        margin-bottom: 10px;
    }
}